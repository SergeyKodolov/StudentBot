# –ò–º–ø–æ—Ä—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –º–æ–¥—É–ª–µ–π
import keyboards.menu_kb as kb
from keyboards.pagination_kb import create_pagination_keyboard

from config_data.config import load_config

from cipher import PassCipher

from database import users_data

from filters import DisciplineFilter

from student_account import StudentAccount

from lexicon import LEXICON, LEXICON_COMMANDS

# –ò–º–ø–æ—Ä—Ç—ã –±–∏–±–ª–∏–æ—Ç–µ–∫ Aiogram
from aiogram import F, Router
from aiogram.types import Message, CallbackQuery

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–æ—É—Ç–µ—Ä–∞
router: Router = Router()

# –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —à–∏—Ñ—Ä–æ–≤—â–∏–∫–∞
config = load_config()
cipher: PassCipher = PassCipher(config.user_data.secret_key)

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –¥–∏—Å—Ü–∏–ø–ª–∏–Ω, —Å—Ç—Ä–∞–Ω–∏—Ü –∏ —Ä–µ–π—Ç–∏–Ω–≥–∞
disciplines: list = []    # –°–ø–∏—Å–æ–∫ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω
pages: list = []          # –°–ø–∏—Å–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü
rating_list: list = []    # –°–ø–∏—Å–æ–∫ —Ä–µ–π—Ç–∏–Ω–≥–æ–≤


# –ú–µ–Ω—é –±–∞–ª–ª–æ–≤ –ë–†–°
@router.message(F.text == LEXICON_COMMANDS["rating"])
async def rating_menu(message: Message):
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–ª–ª–∞–º–∏
    await message.answer(
        text=LEXICON["rating"],
        reply_markup=kb.RatingMenu
    )


# –ú–µ–Ω—é –±–∞–ª–ª–æ–≤ –ø–æ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞–º
@router.message(F.text == LEXICON_COMMANDS["discipline_rating"])
async def discipline_rating_menu(message: Message):
    global disciplines

    await message.answer(text=LEXICON["processing"])

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–±—ä–µ–∫—Ç RatingParser
    # –∏ –≤—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –±–∞–ª–ª–æ–≤ –ø–æ –≤—Å–µ–º –ø—Ä–µ–¥–º–µ—Ç–∞–º
    rating = users_data[message.chat.id]["data"]["rating"]
    rating = await rating.full_disciplines_rating

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω
    if not disciplines:
        disciplines.extend([f"üìå{i.split(':')[0]}" for i in rating])

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –º–µ–Ω—é —Å –≤—ã–±–æ—Ä–æ–º –ø—Ä–µ–¥–º–µ—Ç–æ–≤,
    # –ø–æ –∫–æ—Ç–æ—Ä—ã–º –æ–Ω —Ö–æ—á–µ—Ç –≤–∏–¥–µ—Ç—å —Å–≤–æ–∏ –±–∞–ª–ª—ã
    await message.answer(
        text=LEXICON["discipline_rating"],
        reply_markup=kb.discipline_rating(disciplines=disciplines)
    )


# –û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞ –ø–æ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–µ
@router.message(DisciplineFilter(disciplines=disciplines))
async def send_discipline_rating(message: Message):
    msg = await message.answer(text=LEXICON["processing"])

    discipline = message.text[1:]  # –£–±–∏—Ä–∞–µ–º üìå –∏–∑ —Ç–µ–∫—Å—Ç–∞

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–±—ä–µ–∫—Ç RatingParser
    # –∏ –≤—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –±–∞–ª–ª–æ–≤ –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –ø—Ä–µ–¥–º–µ—Ç—É
    discipline_rating = users_data[message.chat.id]["data"]["rating"]
    discipline_rating = await discipline_rating.discipline_rating(discipline)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –±–∞–ª–ª—ã –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –ø—Ä–µ–¥–º–µ—Ç—É
    await msg.edit_text(text=discipline_rating)


# –û—Ç–ø—Ä–∞–≤–∫–∞ –∫—Ä–∞—Ç–∫–æ–≥–æ —Ä–µ–π—Ç–∏–Ω–≥–∞
@router.message(F.text == LEXICON_COMMANDS["short_rating"])
async def send_short_rating(message: Message):
    msg = await message.answer(text=LEXICON["processing"])

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–±—ä–µ–∫—Ç RatingParser
    # –∏ –≤—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∫—Ä–∞—Ç–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –±–∞–ª–ª–∞–º –ø—Ä–µ–¥–º–µ—Ç–æ–≤
    rating = users_data[message.chat.id]["data"]["rating"]
    rating = await rating.short_disciplines_rating

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫—Ä–∞—Ç–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –±–∞–ª–ª–∞–º –ø—Ä–µ–¥–º–µ—Ç–æ–≤
    await msg.edit_text(text=rating)


# –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–ª–Ω–æ–≥–æ —Ä–µ–π—Ç–∏–Ω–≥–∞ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
@router.message(F.text == LEXICON_COMMANDS["full_rating"])
async def send_full_rating(message: Message):
    global rating_list
    global pages

    await message.answer(LEXICON["processing"])

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–±—ä–µ–∫—Ç RatingParser
    # –∏ –≤—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –±–∞–ª–ª–æ–≤ –ø–æ –≤—Å–µ–º –ø—Ä–µ–¥–º–µ—Ç–∞–º
    rating = users_data[message.chat.id]["data"]["rating"]
    rating_list = await rating.full_disciplines_rating

    # –§–æ—Ä–º–∏—Ä—É–µ–º –Ω–æ–º–µ—Ä–∞ —Å—Ç—Ä–∞–Ω–∏—Ü –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Ç–µ–∫—É—â—É—é
    pages = [str(i) for i in range(1, len(rating_list) + 1)]
    page = users_data[message.chat.id]["data"]["rating_page"]

    # –ü–∞–≥–∏–Ω–∞—Ü–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    if page != len(pages) - 1 and page != 0:
        await message.answer(
            text=rating_list[page],
            reply_markup=create_pagination_keyboard(
                "backward_rating", pages[page], "forward_rating"
            )
        )
    elif page == 0:
        await message.answer(
            text=rating_list[page],
            reply_markup=create_pagination_keyboard(
                pages[page], "forward_rating"
            )
        )
    else:
        await message.answer(
            text=rating_list[page],
            reply_markup=create_pagination_keyboard(
                "backward_rating", pages[page]
            )
        )


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ ">>" –¥–ª—è —Ä–µ–π—Ç–∏–Ω–≥–∞
@router.callback_query(F.data == "forward_rating")
async def press_forward_rating(callback: CallbackQuery):
    global rating_list
    global pages

    # –¢–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
    page = users_data[callback.from_user.id]["data"]["rating_page"]

    # –ü–∞–≥–∏–Ω–∞—Ü–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    if page + 1 < len(pages) - 1:
        await callback.message.edit_text(
            text=rating_list[page + 1],
            reply_markup=create_pagination_keyboard(
                "backward_rating", pages[page + 1], "forward_rating"
            )
        )
    else:
        await callback.message.edit_text(
            text=rating_list[page + 1],
            reply_markup=create_pagination_keyboard(
                "backward_rating", pages[page + 1]
            )
        )

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–µ—Ä–µ—à—ë–ª –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    users_data[callback.from_user.id]["data"]["rating_page"] += 1

    await callback.answer()


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "<<" –¥–ª—è —Ä–µ–π—Ç–∏–Ω–≥–∞
@router.callback_query(F.data == "backward_rating")
async def press_backward_rating(callback: CallbackQuery):
    global rating_list
    global pages

    # –¢–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
    page = users_data[callback.from_user.id]["data"]["rating_page"]

    # –ü–∞–≥–∏–Ω–∞—Ü–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    if page - 1 > 0:
        await callback.message.edit_text(
            text=rating_list[page - 1],
            reply_markup=create_pagination_keyboard(
                "backward_rating", pages[page - 1], "forward_rating"
            )
        )
    else:
        await callback.message.edit_text(
            text=rating_list[page - 1],
            reply_markup=create_pagination_keyboard(
                pages[page - 1], "forward_rating"
            )
        )

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–µ—Ä–µ—à—ë–ª –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    users_data[callback.from_user.id]["data"]["rating_page"] -= 1

    await callback.answer()


# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–π—Ç–∏–Ω–≥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@router.message(F.text == LEXICON_COMMANDS["update_rating"])
async def update_student_rating(message: Message):
    msg = await message.answer(text=LEXICON["processing"])

    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    # –ü–∞—Ä–æ–ª—å –¥–µ—à–∏—Ñ—Ä—É–µ–º –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    login = users_data[message.chat.id]["login"]
    password = cipher.decrypt_password(users_data[message.chat.id]["password"])

    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–µ—Å—Å–∏—é
    account = await StudentAccount(
        user_login=login,
        user_pass=password
    ).driver

    # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    users_data[message.chat.id]["data"] = {
        "account": account,              # –î–∞–Ω–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç–∞
        "schedule": account.schedule,    # –û–±—ä–µ–∫—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º
        "rating": account.rating,        # –û–±—ä–µ–∫—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–ª–ª–∞–º–∏
        "schedule_page": 0,              # –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
        "rating_page": 0                 # –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞
    }

    # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –±–∞–ª–ª–∞–º –≤ –±–∞–∑–µ
    users_data[message.chat.id]["data"]["account"].update_student_data(key="rating")

    await msg.edit_text(text=LEXICON["successful_updating"])
